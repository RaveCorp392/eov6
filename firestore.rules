rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ---- helpers ----
    function isSignedIn() { return request.auth != null; }
    function isAgent() {
      return isSignedIn() && (request.auth.token.role in ['agent','admin','owner']);
    }
    function isCallerFor(code) {
      return isSignedIn() && request.auth.token.sessionCode == code;
    }
    function sessionDoc(code) {
      return get(/databases/$(database)/documents/sessions/$(code));
    }
    // Be tolerant to creator field name variants
    function isSessionOwner(code) {
      return isSignedIn() && (
        sessionDoc(code).data.ownerUid     == request.auth.uid ||
        sessionDoc(code).data.agentUid     == request.auth.uid ||
        sessionDoc(code).data.createdByUid == request.auth.uid ||
        sessionDoc(code).data.creatorUid   == request.auth.uid ||
        sessionDoc(code).data.createdBy    == request.auth.uid
      );
    }
    function isParticipant(code) { return isAgent() || isCallerFor(code) || isSessionOwner(code); }
    function isActive(code) {
      let d = sessionDoc(code);
      let closed = (d.data.closed == true);
      let notExpired = !(d.data.expiresAt is timestamp) || (d.data.expiresAt > request.time);
      return !closed && notExpired;
    }

    // default deny
    match /{document=**} { allow read, write: if false; }

    // ---------- Sessions subtree ----------
    match /sessions/{code} {
      allow read: if isParticipant(code);
      allow create: if isAgent() || isSessionOwner(code);
      allow update: if isParticipant(code) && isActive(code);
      allow delete: if false;

      match /messages/{id} {
        allow read:   if isSignedIn();
        allow create: if isParticipant(code) && isActive(code)
          && request.resource.data.keys().hasAll(['role','type','createdAt'])
          && (request.resource.data.type in ['text','file','details','system'])
          && request.resource.data.size() <= 4096;
        allow update, delete: if false;
      }

      match /{sub=**}/{doc} {
        allow read: if isSignedIn();
        allow create: if isParticipant(code) && isActive(code);
        allow update, delete: if false;
      }
    }

    match /orgs/{orgId}         { allow read: if isSignedIn(); allow write: if false; }
    match /entitlements/{id}    { allow read: if isSignedIn(); allow write: if false; }
    match /memberships/{id}     { allow read: if isSignedIn(); allow write: if false; }
    match /orgResolver/{id}     { allow read: if isSignedIn(); allow write: if false; }

    match /policies/{id}        { allow read: if true; allow write: if false; }
    match /policy/{id}          { allow read: if true; allow write: if false; }
    match /acks/{id}            { allow read: if true; allow write: if false; }
    match /ackTemplates/{id}    { allow read: if true; allow write: if false; }

    match /jobs/{doc=**}        { allow read, write: if false; }
  }
}
